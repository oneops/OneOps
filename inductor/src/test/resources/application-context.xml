<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://activemq.apache.org/schema/core 
                           http://activemq.apache.org/schema/core/activemq-core-5.11.1.xsd">

  <!-- spring 3+ way to get config -->
  <context:annotation-config/>
  <bean id="propertyPlaceholderConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
    <property name="ignoreResourceNotFound" value="true"/>
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
    <property name="locations">
      <list>
        <value>classpath:inductor.properties</value>
        <value>file:${conf.dir}/inductor.properties</value>
      </list>
    </property>
  </bean>

  <context:component-scan base-package="com.oneops.inductor"/>

  <!-- Controller bus (inboubd by avail zone) -->
  <amq:queue id="inbound" physicalName="${amq.in_queue}"/>
  <!-- out bound queue is setup in messagePublisher below -->

  <!-- JMS ConnectionFactory to use, configuring the embedded broker using
    XML -->
  <amq:connectionFactory id="jmsFactory"
    brokerURL="${amq.connect_string}"
    userName="${amq.zone}"
    password="${amq.authkey}"
  />

  <!-- JMS Producer Configuration -->
  <bean id="jmsProducerConnectionFactory"
    class="org.springframework.jms.connection.CachingConnectionFactory"
    p:targetConnectionFactory-ref="jmsFactory"/>

  <!-- JMS Consumer consumes queue: <provider>.<avail zone>.controller.workorders
    (inbound queue) -->
  <bean id="messagePublisher" class="com.oneops.inductor.MessagePublisher"
    init-method="init">
    <property name="connectionFactory" ref="jmsProducerConnectionFactory"/>
    <property name="topic" value="controller.response"/>
    <property name="scanFolder" value="${scan_path}"/>
    <property name="scanPeriod" value="${scan_period}"/>

  </bean>

  <bean id="inductorConfig" class="com.oneops.inductor.Config" init-method="init"/>

  <!-- JMS Consumer consumes queue: <provider>.<avail zone>.controller.workorders
      (inbound queue) -->
  <bean id="messageListener" class="com.oneops.inductor.Listener" init-method="init"
    scope="prototype">
    <property name="messagePublisher" ref="messagePublisher"/>
    <property name="config" ref="inductorConfig"/>
  </bean>

  <!-- and this is the message listener container -->
  <bean id="listenerContainer"
    class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="connectionFactory" ref="jmsFactory"/>
    <property name="maxConcurrentConsumers" value="20"/>
    <property name="concurrentConsumers" value="10"/>
    <property name="destination" ref="inbound"/>
    <property name="messageListener" ref="messageListener"/>
    <!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
    <property name="sessionAcknowledgeMode" value="2"/>
  </bean>

</beans>

