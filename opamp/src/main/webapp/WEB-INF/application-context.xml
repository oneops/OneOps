<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://activemq.apache.org/schema/core 
                           http://activemq.apache.org/schema/core/activemq-core-5.11.1.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Common lib components -->
    <import resource="classpath:shared-lib-context.xml"/>
	<import resource="classpath:security-config.xml"/>

	<!-- Mybatis components  -->
    <import resource="mybatis-beans.xml"/>

    <!-- Enable auto scanning & annotation config -->
    <context:annotation-config/>
    <context:component-scan base-package="com.oneops.opamp.cache"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_FALLBACK"/>
        <property name="searchSystemEnvironment" value="true"/>
    </bean>

    <amq:queue id="opscistates" physicalName="ops-ci-states"/>

    <!-- Broker connector URI-->
    <bean id="brokerURI" class="com.oneops.util.AMQConnectorURI">
        <property name="transport" value="failover"/>
        <property name="protocol" value="tcp"/>
        <property name="keepAlive" value="true"/>
        <property name="dnsResolve" value="${AMQ_DNS_RESOLVE:true}"/>
        <property name="transportOptions">
            <util:map>
                <entry key="initialReconnectDelay" value="1000"/>
				<entry key="maxReconnectDelay"     value="5000"/>
                <entry key="useExponentialBackOff" value="false"/>
                <entry key="jms.redeliveryPolicy.maximumRedeliveries" value="10"/>
                <entry key="jms.redeliveryPolicy.initialRedeliveryDelay" value="10"/>
                <entry key="jms.redeliveryPolicy.redeliveryDelay" value="10"/>
                <entry key="jms.prefetchPolicy.queuePrefetch" value="1"/>
            </util:map>
        </property>
    </bean>

    <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML -->
    <!--amq:connectionFactory id="jmsFactory" brokerURL="#{brokerURI.build('opsmq','61616')}" userName="superuser" password=""/-->

    <bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="#{brokerURI.build('${KLOOPZ_AMQ_HOST:kloopzmq}','61616')}"/>
		<property name="userName" value="${AMQ_USER}"/>
		<property name="password" value="${KLOOPZ_AMQ_PASS}"/>
    </bean>

	<bean id="opsdbCluster" class="com.oneops.cassandra.ClusterBootstrap">
        <property name="hostPort" value="opsdb:9160"/>
    </bean>

    <bean id="opsEventDao" class="com.oneops.ops.dao.OpsEventDao" init-method="init">
    	<property name="clusterBootstrap" ref="opsdbCluster" />
		<property name="clusterName" value="sensor_cluster" />
		<property name="keyspaceName" value="sensor_ksp" />
	</bean>

	<bean id="coProcessor" class="com.oneops.ops.CiOpsProcessor">
		<property name="oeDao" ref="opsEventDao" />
	</bean>

	<bean id="envProcessor" class="com.oneops.opamp.service.CachedEnvPropsProcessor">
		<property name="cmProcessor" ref="cmsCmProcessor" />
		<property name="rfcProcessor" ref="cmsRfcProcessor" />
		<property name="mdProcessor" ref="cmsMdProcessor"/>
		<property name="maxSize" value="${VAR_CACHE_SIZE:10}"/>
		<property name="ttlInSeconds" value="${VAR_CACHE_TTL:30}"/>
	</bean>

	<bean id="gson" class="com.google.gson.Gson" />

  	<bean id="antennaClient" class="com.oneops.antenna.client.JMSTransmitter"
            init-method="init" destroy-method="destroy">
       	<property name="scanFolder" value="${OPAMP_ANTENNA_RETRY_DIR:/opt/oneops/opamp/antenna/retry}" />
       	<property name="connFactory" ref="jmsFactory" />
       	<property name="searchPublisher" ref="searchPublisher" />
   	</bean>
	
	<bean id="searchPublisher" class="com.oneops.util.SearchPublisher" init-method="init" destroy-method="destroy">
		<property name="connFactory" ref="searchmqFactory" />
		<property name="searchSender" ref="searchJmsSender" />
		<property name="searchPublishAsync" value="${SEARCH_PUBLISH_ASYNC:true}" />
	</bean>
	
	<bean id="searchJmsSender" class="com.oneops.util.SearchJmsSender" init-method="init" destroy-method="destroy">
		<constructor-arg value="${OPAMP_SEARCH_PUBLISH_POOLSIZE:50}"/>
		<property name="name" value="opamp-search-publish" />
		<property name="shortName" value="opamp" />
		<property name="backlogThreshold" value="${SEARCH_WARN_MSG_THRESHOLD:10}" />
		<property name="scanFolder" value="${OPAMP_SEARCH_RETRY_DIR:/opt/oneops/opamp/search/retry}" />
	</bean>
	
    <bean id="searchBrokerURI" class="com.oneops.util.AMQConnectorURI">
        <property name="transport" value="failover"/>
        <property name="protocol" value="tcp"/>
        <property name="host" value="${SEARCH_AMQ_HOST:searchmq}"/>
        <property name="port" value="61616"/>
        <property name="keepAlive" value="true"/>
        <property name="dnsResolve" value="true"/>
        <property name="transportOptions">
            <util:map>
                <entry key="initialReconnectDelay" value="100"/>
                <entry key="maxReconnectDelay" value="5000"/>
                <entry key="maxReconnectAttempts" value="-1"/>
                <entry key="randomize" value="false"/>
                <entry key="timeout" value="3000"/>
            </util:map>
        </property>
    </bean>

    <bean id="searchmqFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="#{searchBrokerURI.build()}"/>
        <property name="userName" value="${SEARCHMQ_USER}"/>
        <property name="password" value="${SEARCHMQ_PASS}"/>
    </bean>
	
	<bean id="notifier" class="com.oneops.opamp.service.Notifications">
		<property name="cmProcessor" ref="cmsCmProcessor" />
        <property name="antennaClient" ref="antennaClient" />
        <property name="envProcessor" ref="envProcessor" />  
        <property name="eventUtil" ref="eventUtil" />
	</bean>

	<bean id="bsProcessor" class="com.oneops.opamp.service.BadStateProcessor">
		<property name="cmProcessor" ref="cmsCmProcessor" />
		<property name="envProcessor" ref="envProcessor" />
		<property name="coProcessor" ref="coProcessor" />
		<property name="cmManager" ref="cmsCmManager" />
        <property name="opsManager" ref="opsManager" />
		<property name="opsProcProcessor" ref="procProcessor" />
        <property name="notifier" ref="notifier" />
       	<property name="restTemplate" ref="restTemplate" />
       	<property name="transistorUrl" value="${TRANSISTOR_HOST:http://cmsapi}:8080/transistor/rest/"/>
       	<property name="eventUtil" ref="eventUtil" />
       	<property name="startExponentialDelayAfterProcedures" value="${startExponentialDelayAfterProcedures:4}"/>
       	<property name="exponentialBackoffFactor" value="${exponentialBackoffFactor:2}"/>
       	<property name="maxDaysRepair" value="${maxDaysRepair:11}"/>
		<property name="maxPastDaysForProcedureCount" value="${maxPastDaysForProcedureCount:15}"/>
	</bean>

	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
		<property name="supportedMediaTypes" value="application/json" />
	</bean>
	 
	<bean class="org.springframework.web.client.RestTemplate" id="restTemplate">
		<constructor-arg>
    		<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
    			<property name="readTimeout" value="180000" />
    		</bean>
		</constructor-arg>
	  	<property name="messageConverters">
	    	<list>
	     		<ref bean="jsonMessageConverter" />
	    	</list>  
	  	</property>  
	</bean> 

  	<bean id="fsProcessor" class="com.oneops.opamp.service.FlexStateProcessor">
       	<property name="restTemplate" ref="restTemplate" />
       	<property name="transistorUrl" value="${TRANSISTOR_HOST:http://cmsapi}:8080/transistor/rest/" />
		<property name="cmProcessor" ref="cmsCmProcessor" />
		<property name="envProcessor" ref="envProcessor" />
		<property name="coProcessor" ref="coProcessor" />
        <property name="notifier" ref="notifier" />
   	</bean>

    <bean id="opsCiStateDao" class="com.oneops.ops.dao.OpsCiStateDao" init-method="init">
    	<property name="clusterBootstrap" ref="opsdbCluster" />
        <property name="clusterName" value="sensor_cluster"/>
        <property name="keyspaceName" value="sensor_ksp"/>
    </bean>

    <bean id="trDao" class="com.oneops.sensor.thresholds.ThresholdsDao" init-method="init">
    	<property name="clusterBootstrap" ref="opsdbCluster" />
        <property name="clusterName" value="sensor_cluster"/>
        <property name="keyspaceName" value="sensor_ksp"/>
        <property name="timeout" value="600000"/>
        <property name="opsCiStateDao" ref="opsCiStateDao"/>
    </bean>

	<bean id="ciOpsProcessor" class="com.oneops.ops.CiOpsProcessor">
        <property name="oeDao" ref="opsEventDao"/>
        <property name="opsCiStateDao" ref="opsCiStateDao"/>
        <property name="trDao" ref="trDao"/>
	</bean>

	<bean id="opsEventListener" class="com.oneops.opamp.jms.OpsEventListener">
		<property name="opsCiStateDao" ref="opsCiStateDao"/>
		<property name="bsProcessor" ref="bsProcessor" />
		<property name="fsProcessor" ref="fsProcessor" />
		<property name="ciOpsProcessor" ref="ciOpsProcessor" />
		<property name="envProcessor" ref="envProcessor" />
		<property name="gson" ref="gson" />
		<property name="notifier" ref="notifier" />
		<property name="eventUtil" ref="eventUtil" />
	</bean>

	<!-- and this is the message listener container -->
	<bean id="listenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory" />
		<property name="maxConcurrentConsumers" value="${opamp.consumers:3}" />
		<property name="concurrentConsumers" value="${opamp.concurrent_Consumers:3}" />
		<property name="destination" ref="opscistates" />
		<property name="messageListener" ref="opsEventListener" />
		<!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
		<!-- <property name="sessionAcknowledgeMode" value="2"/> -->
        <property name="sessionTransacted" value="true"/>
	</bean>	
	
	<!-- Utility to convert from one events to the other -->
	<bean id="eventUtil"
		class="com.oneops.opamp.util.EventUtil">
		<property name="gson" ref="gson" />
	    <property name="notifier" ref="notifier" />
	</bean>

</beans>
