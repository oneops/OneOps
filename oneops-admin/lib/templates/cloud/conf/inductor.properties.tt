amq.connect_string = failover:(<%=
  hosts = []
  @mqhost.split(",").each do |h|
     hosts.push("ssl://" + h + ":" + options[:mqport].to_s + "?keepAlive=true")
  end
  hosts.join(",")
   %>)?jms.useCompression=true&initialReconnectDelay=1000&maxReconnectAttempts=-1&startupMaxReconnectAttempts=0&jms.prefetchPolicy.queuePrefetch=1
amq.zone = <%= 
  # handle either queue or cloud location
  loc = @queue.gsub(".","/").gsub("clouds/","clouds:")
  if loc[0,1] != "/"
    loc = "/"+loc
  end
  if @authkey.include?(":")
    loc = @authkey.split(":").first
  end
  loc %>
amq.authkey = <%= 
  auth = @authkey
  if @authkey.include?(":")
    auth = @authkey.split(":").last
  end
  auth %>
amq.in_queue = <%= @queue_name %>
packer_home = <%= @inductor_dir %>/packer
home_dir = <%= @home %>
data_dir = <%= @home %>/data
scan_path = <%= @home %>/retry
scan_period = 5
retry_count = 2
ip_attribute = <%= @ip_attribute %>
mgmt_domain = <%= @collector_domain %>
perf_collector_cert_location = <%= @perf_collector_cert_location %>
mgmt_url = <%= @mgmt_url %>
mgmt_cert = <%= @logstash_cert_location %>
daq_enabled = <%= @daq_enabled %>
dns = <%= @dns %>
debug_mode = <%= @debug %>
max_consumers = <%= @max_consumers %>
local_max_consumers = <%= @local_max_consumers %>
env_vars = <%= @env_vars %>
tunnel_metrics = <%= @tunnel_metrics %>
verify.mode = <%= @verifier_mode %>
