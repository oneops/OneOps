/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.CmCiRelationsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmCiRelations extends TableImpl<CmCiRelationsRecord> {

    private static final long serialVersionUID = -1415765729;

    /**
     * The reference instance of <code>kloopzcm.cm_ci_relations</code>
     */
    public static final CmCiRelations CM_CI_RELATIONS = new CmCiRelations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmCiRelationsRecord> getRecordType() {
        return CmCiRelationsRecord.class;
    }

    /**
     * The column <code>kloopzcm.cm_ci_relations.ci_relation_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Long> CI_RELATION_ID = createField("ci_relation_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.ns_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Long> NS_ID = createField("ns_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.from_ci_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Long> FROM_CI_ID = createField("from_ci_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.relation_goid</code>.
     */
    public final TableField<CmCiRelationsRecord, String> RELATION_GOID = createField("relation_goid", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.relation_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Integer> RELATION_ID = createField("relation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.to_ci_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Long> TO_CI_ID = createField("to_ci_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.ci_state_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Integer> CI_STATE_ID = createField("ci_state_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.last_applied_rfc_id</code>.
     */
    public final TableField<CmCiRelationsRecord, Long> LAST_APPLIED_RFC_ID = createField("last_applied_rfc_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.comments</code>.
     */
    public final TableField<CmCiRelationsRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.created_by</code>.
     */
    public final TableField<CmCiRelationsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.update_by</code>.
     */
    public final TableField<CmCiRelationsRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.created</code>.
     */
    public final TableField<CmCiRelationsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>kloopzcm.cm_ci_relations.updated</code>.
     */
    public final TableField<CmCiRelationsRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>kloopzcm.cm_ci_relations</code> table reference
     */
    public CmCiRelations() {
        this(DSL.name("cm_ci_relations"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.cm_ci_relations</code> table reference
     */
    public CmCiRelations(String alias) {
        this(DSL.name(alias), CM_CI_RELATIONS);
    }

    /**
     * Create an aliased <code>kloopzcm.cm_ci_relations</code> table reference
     */
    public CmCiRelations(Name alias) {
        this(alias, CM_CI_RELATIONS);
    }

    private CmCiRelations(Name alias, Table<CmCiRelationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmCiRelations(Name alias, Table<CmCiRelationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CM_CI_RELATIONS_FROMCI_IDX, Indexes.CM_CI_RELATIONS_GOID_IDX, Indexes.CM_CI_RELATIONS_NS_IDX, Indexes.CM_CI_RELATIONS_PK, Indexes.CM_CI_RELATIONS_R_IDX, Indexes.CM_CI_RELATIONS_R_NS_IDX, Indexes.CM_CI_RELATIONS_TOCI_IDX, Indexes.CM_CI_RELATIONS_UNIQ_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmCiRelationsRecord> getPrimaryKey() {
        return Keys.CM_CI_RELATIONS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmCiRelationsRecord>> getKeys() {
        return Arrays.<UniqueKey<CmCiRelationsRecord>>asList(Keys.CM_CI_RELATIONS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CmCiRelationsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CmCiRelationsRecord, ?>>asList(Keys.CM_CI_RELATIONS__CM_CI_RELATIONS_NS_FK, Keys.CM_CI_RELATIONS__CM_CI_RELATIONS_FRID_FK, Keys.CM_CI_RELATIONS__DF_CI_RELATIONS_MDRID_FK, Keys.CM_CI_RELATIONS__CM_CI_RELATIONS_TOID_FK, Keys.CM_CI_RELATIONS__CM_CI_RELATIONS_STID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmCiRelations as(String alias) {
        return new CmCiRelations(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmCiRelations as(Name alias) {
        return new CmCiRelations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CmCiRelations rename(String name) {
        return new CmCiRelations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CmCiRelations rename(Name name) {
        return new CmCiRelations(name, null);
    }
}
