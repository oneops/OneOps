/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.NsNamespacesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NsNamespaces extends TableImpl<NsNamespacesRecord> {

    private static final long serialVersionUID = 1882020083;

    /**
     * The reference instance of <code>kloopzcm.ns_namespaces</code>
     */
    public static final NsNamespaces NS_NAMESPACES = new NsNamespaces();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NsNamespacesRecord> getRecordType() {
        return NsNamespacesRecord.class;
    }

    /**
     * The column <code>kloopzcm.ns_namespaces.ns_id</code>.
     */
    public final TableField<NsNamespacesRecord, Long> NS_ID = createField("ns_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.ns_namespaces.ns_path</code>.
     */
    public final TableField<NsNamespacesRecord, String> NS_PATH = createField("ns_path", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.ns_namespaces.created</code>.
     */
    public final TableField<NsNamespacesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>kloopzcm.ns_namespaces</code> table reference
     */
    public NsNamespaces() {
        this(DSL.name("ns_namespaces"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.ns_namespaces</code> table reference
     */
    public NsNamespaces(String alias) {
        this(DSL.name(alias), NS_NAMESPACES);
    }

    /**
     * Create an aliased <code>kloopzcm.ns_namespaces</code> table reference
     */
    public NsNamespaces(Name alias) {
        this(alias, NS_NAMESPACES);
    }

    private NsNamespaces(Name alias, Table<NsNamespacesRecord> aliased) {
        this(alias, aliased, null);
    }

    private NsNamespaces(Name alias, Table<NsNamespacesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NS_NAMESPACES_AK, Indexes.NS_NAMESPACES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NsNamespacesRecord> getPrimaryKey() {
        return Keys.NS_NAMESPACES_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NsNamespacesRecord>> getKeys() {
        return Arrays.<UniqueKey<NsNamespacesRecord>>asList(Keys.NS_NAMESPACES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NsNamespaces as(String alias) {
        return new NsNamespaces(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NsNamespaces as(Name alias) {
        return new NsNamespaces(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NsNamespaces rename(String name) {
        return new NsNamespaces(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NsNamespaces rename(Name name) {
        return new NsNamespaces(name, null);
    }
}
