/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.CmOpsActionStateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmOpsActionState extends TableImpl<CmOpsActionStateRecord> {

    private static final long serialVersionUID = 1127479622;

    /**
     * The reference instance of <code>kloopzcm.cm_ops_action_state</code>
     */
    public static final CmOpsActionState CM_OPS_ACTION_STATE = new CmOpsActionState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmOpsActionStateRecord> getRecordType() {
        return CmOpsActionStateRecord.class;
    }

    /**
     * The column <code>kloopzcm.cm_ops_action_state.state_id</code>.
     */
    public final TableField<CmOpsActionStateRecord, Integer> STATE_ID = createField("state_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cm_ops_action_state.state_name</code>.
     */
    public final TableField<CmOpsActionStateRecord, String> STATE_NAME = createField("state_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>kloopzcm.cm_ops_action_state</code> table reference
     */
    public CmOpsActionState() {
        this(DSL.name("cm_ops_action_state"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.cm_ops_action_state</code> table reference
     */
    public CmOpsActionState(String alias) {
        this(DSL.name(alias), CM_OPS_ACTION_STATE);
    }

    /**
     * Create an aliased <code>kloopzcm.cm_ops_action_state</code> table reference
     */
    public CmOpsActionState(Name alias) {
        this(alias, CM_OPS_ACTION_STATE);
    }

    private CmOpsActionState(Name alias, Table<CmOpsActionStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmOpsActionState(Name alias, Table<CmOpsActionStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CM_OPS_ACTION_STATE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmOpsActionStateRecord> getPrimaryKey() {
        return Keys.CM_OPS_ACTION_STATE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmOpsActionStateRecord>> getKeys() {
        return Arrays.<UniqueKey<CmOpsActionStateRecord>>asList(Keys.CM_OPS_ACTION_STATE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmOpsActionState as(String alias) {
        return new CmOpsActionState(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmOpsActionState as(Name alias) {
        return new CmOpsActionState(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CmOpsActionState rename(String name) {
        return new CmOpsActionState(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CmOpsActionState rename(Name name) {
        return new CmOpsActionState(name, null);
    }
}
