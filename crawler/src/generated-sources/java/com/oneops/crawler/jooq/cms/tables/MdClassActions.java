/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.MdClassActionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdClassActions extends TableImpl<MdClassActionsRecord> {

    private static final long serialVersionUID = -1081877228;

    /**
     * The reference instance of <code>kloopzcm.md_class_actions</code>
     */
    public static final MdClassActions MD_CLASS_ACTIONS = new MdClassActions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MdClassActionsRecord> getRecordType() {
        return MdClassActionsRecord.class;
    }

    /**
     * The column <code>kloopzcm.md_class_actions.action_id</code>.
     */
    public final TableField<MdClassActionsRecord, Integer> ACTION_ID = createField("action_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.class_id</code>.
     */
    public final TableField<MdClassActionsRecord, Integer> CLASS_ID = createField("class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.action_name</code>.
     */
    public final TableField<MdClassActionsRecord, String> ACTION_NAME = createField("action_name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.is_inheritable</code>.
     */
    public final TableField<MdClassActionsRecord, Boolean> IS_INHERITABLE = createField("is_inheritable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.description</code>.
     */
    public final TableField<MdClassActionsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.created</code>.
     */
    public final TableField<MdClassActionsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.updated</code>.
     */
    public final TableField<MdClassActionsRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>kloopzcm.md_class_actions.arguments</code>.
     */
    public final TableField<MdClassActionsRecord, String> ARGUMENTS = createField("arguments", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>kloopzcm.md_class_actions</code> table reference
     */
    public MdClassActions() {
        this(DSL.name("md_class_actions"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.md_class_actions</code> table reference
     */
    public MdClassActions(String alias) {
        this(DSL.name(alias), MD_CLASS_ACTIONS);
    }

    /**
     * Create an aliased <code>kloopzcm.md_class_actions</code> table reference
     */
    public MdClassActions(Name alias) {
        this(alias, MD_CLASS_ACTIONS);
    }

    private MdClassActions(Name alias, Table<MdClassActionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MdClassActions(Name alias, Table<MdClassActionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MD_CLASS_ACTIONS_CL_IDX, Indexes.MD_CLASS_ACTIONS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MdClassActionsRecord> getPrimaryKey() {
        return Keys.MD_CLASS_ACTIONS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MdClassActionsRecord>> getKeys() {
        return Arrays.<UniqueKey<MdClassActionsRecord>>asList(Keys.MD_CLASS_ACTIONS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MdClassActionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MdClassActionsRecord, ?>>asList(Keys.MD_CLASS_ACTIONS__MD_CLASS_ACTIONS_CL_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdClassActions as(String alias) {
        return new MdClassActions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdClassActions as(Name alias) {
        return new MdClassActions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MdClassActions rename(String name) {
        return new MdClassActions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MdClassActions rename(Name name) {
        return new MdClassActions(name, null);
    }
}
