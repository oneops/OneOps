/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.CmsLockRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmsLock extends TableImpl<CmsLockRecord> {

    private static final long serialVersionUID = -1186841497;

    /**
     * The reference instance of <code>kloopzcm.cms_lock</code>
     */
    public static final CmsLock CMS_LOCK = new CmsLock();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmsLockRecord> getRecordType() {
        return CmsLockRecord.class;
    }

    /**
     * The column <code>kloopzcm.cms_lock.lock_id</code>.
     */
    public final TableField<CmsLockRecord, Long> LOCK_ID = createField("lock_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cms_lock.lock_name</code>.
     */
    public final TableField<CmsLockRecord, String> LOCK_NAME = createField("lock_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cms_lock.locked_by</code>.
     */
    public final TableField<CmsLockRecord, String> LOCKED_BY = createField("locked_by", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.cms_lock.created</code>.
     */
    public final TableField<CmsLockRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>kloopzcm.cms_lock.updated</code>.
     */
    public final TableField<CmsLockRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>kloopzcm.cms_lock</code> table reference
     */
    public CmsLock() {
        this(DSL.name("cms_lock"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.cms_lock</code> table reference
     */
    public CmsLock(String alias) {
        this(DSL.name(alias), CMS_LOCK);
    }

    /**
     * Create an aliased <code>kloopzcm.cms_lock</code> table reference
     */
    public CmsLock(Name alias) {
        this(alias, CMS_LOCK);
    }

    private CmsLock(Name alias, Table<CmsLockRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmsLock(Name alias, Table<CmsLockRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CMS_LOCK_PK, Indexes.CMS_LOCK_ULN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CmsLockRecord> getPrimaryKey() {
        return Keys.CMS_LOCK_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CmsLockRecord>> getKeys() {
        return Arrays.<UniqueKey<CmsLockRecord>>asList(Keys.CMS_LOCK_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmsLock as(String alias) {
        return new CmsLock(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CmsLock as(Name alias) {
        return new CmsLock(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CmsLock rename(String name) {
        return new CmsLock(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CmsLock rename(Name name) {
        return new CmsLock(name, null);
    }
}
