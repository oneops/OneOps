/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.DjDeploymentStateHistRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DjDeploymentStateHist extends TableImpl<DjDeploymentStateHistRecord> {

    private static final long serialVersionUID = 601981383;

    /**
     * The reference instance of <code>kloopzcm.dj_deployment_state_hist</code>
     */
    public static final DjDeploymentStateHist DJ_DEPLOYMENT_STATE_HIST = new DjDeploymentStateHist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DjDeploymentStateHistRecord> getRecordType() {
        return DjDeploymentStateHistRecord.class;
    }

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.hist_id</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, Long> HIST_ID = createField("hist_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.deployment_id</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, Long> DEPLOYMENT_ID = createField("deployment_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.old_state_id</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, Integer> OLD_STATE_ID = createField("old_state_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.new_state_id</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, Integer> NEW_STATE_ID = createField("new_state_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.description</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.comments</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.ops</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, String> OPS = createField("ops", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.updated_by</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>kloopzcm.dj_deployment_state_hist.updated</code>.
     */
    public final TableField<DjDeploymentStateHistRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>kloopzcm.dj_deployment_state_hist</code> table reference
     */
    public DjDeploymentStateHist() {
        this(DSL.name("dj_deployment_state_hist"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.dj_deployment_state_hist</code> table reference
     */
    public DjDeploymentStateHist(String alias) {
        this(DSL.name(alias), DJ_DEPLOYMENT_STATE_HIST);
    }

    /**
     * Create an aliased <code>kloopzcm.dj_deployment_state_hist</code> table reference
     */
    public DjDeploymentStateHist(Name alias) {
        this(alias, DJ_DEPLOYMENT_STATE_HIST);
    }

    private DjDeploymentStateHist(Name alias, Table<DjDeploymentStateHistRecord> aliased) {
        this(alias, aliased, null);
    }

    private DjDeploymentStateHist(Name alias, Table<DjDeploymentStateHistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DJ_DEPLOYMENT_STATE_HIST_IDX, Indexes.DJ_DEPLOYMENT_STATE_HIST_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DjDeploymentStateHistRecord> getPrimaryKey() {
        return Keys.DJ_DEPLOYMENT_STATE_HIST_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DjDeploymentStateHistRecord>> getKeys() {
        return Arrays.<UniqueKey<DjDeploymentStateHistRecord>>asList(Keys.DJ_DEPLOYMENT_STATE_HIST_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DjDeploymentStateHistRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DjDeploymentStateHistRecord, ?>>asList(Keys.DJ_DEPLOYMENT_STATE_HIST__DJ_DEPLOYMENT_STATE_HIST_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DjDeploymentStateHist as(String alias) {
        return new DjDeploymentStateHist(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DjDeploymentStateHist as(Name alias) {
        return new DjDeploymentStateHist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DjDeploymentStateHist rename(String name) {
        return new DjDeploymentStateHist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DjDeploymentStateHist rename(Name name) {
        return new DjDeploymentStateHist(name, null);
    }
}
