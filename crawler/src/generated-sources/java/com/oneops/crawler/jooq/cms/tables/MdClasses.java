/*
 * This file is generated by jOOQ.
*/
package com.oneops.crawler.jooq.cms.tables;


import com.oneops.crawler.jooq.cms.Indexes;
import com.oneops.crawler.jooq.cms.Keys;
import com.oneops.crawler.jooq.cms.Kloopzcm;
import com.oneops.crawler.jooq.cms.tables.records.MdClassesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MdClasses extends TableImpl<MdClassesRecord> {

    private static final long serialVersionUID = 1503691664;

    /**
     * The reference instance of <code>kloopzcm.md_classes</code>
     */
    public static final MdClasses MD_CLASSES = new MdClasses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MdClassesRecord> getRecordType() {
        return MdClassesRecord.class;
    }

    /**
     * The column <code>kloopzcm.md_classes.class_id</code>.
     */
    public final TableField<MdClassesRecord, Integer> CLASS_ID = createField("class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_classes.class_name</code>.
     */
    public final TableField<MdClassesRecord, String> CLASS_NAME = createField("class_name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_classes.short_class_name</code>.
     */
    public final TableField<MdClassesRecord, String> SHORT_CLASS_NAME = createField("short_class_name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_classes.super_class_id</code>.
     */
    public final TableField<MdClassesRecord, Integer> SUPER_CLASS_ID = createField("super_class_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>kloopzcm.md_classes.is_namespace</code>.
     */
    public final TableField<MdClassesRecord, Boolean> IS_NAMESPACE = createField("is_namespace", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>kloopzcm.md_classes.impl</code>.
     */
    public final TableField<MdClassesRecord, String> IMPL = createField("impl", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>kloopzcm.md_classes.access_level</code>.
     */
    public final TableField<MdClassesRecord, String> ACCESS_LEVEL = createField("access_level", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>kloopzcm.md_classes.description</code>.
     */
    public final TableField<MdClassesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>kloopzcm.md_classes.format</code>.
     */
    public final TableField<MdClassesRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>kloopzcm.md_classes.created</code>.
     */
    public final TableField<MdClassesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>kloopzcm.md_classes.flags</code>.
     */
    public final TableField<MdClassesRecord, Integer> FLAGS = createField("flags", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>kloopzcm.md_classes</code> table reference
     */
    public MdClasses() {
        this(DSL.name("md_classes"), null);
    }

    /**
     * Create an aliased <code>kloopzcm.md_classes</code> table reference
     */
    public MdClasses(String alias) {
        this(DSL.name(alias), MD_CLASSES);
    }

    /**
     * Create an aliased <code>kloopzcm.md_classes</code> table reference
     */
    public MdClasses(Name alias) {
        this(alias, MD_CLASSES);
    }

    private MdClasses(Name alias, Table<MdClassesRecord> aliased) {
        this(alias, aliased, null);
    }

    private MdClasses(Name alias, Table<MdClassesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kloopzcm.KLOOPZCM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MD_CLASSES_CLN_IDX, Indexes.MD_CLASSES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MdClassesRecord> getPrimaryKey() {
        return Keys.MD_CLASSES_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MdClassesRecord>> getKeys() {
        return Arrays.<UniqueKey<MdClassesRecord>>asList(Keys.MD_CLASSES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdClasses as(String alias) {
        return new MdClasses(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MdClasses as(Name alias) {
        return new MdClasses(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MdClasses rename(String name) {
        return new MdClasses(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MdClasses rename(Name name) {
        return new MdClasses(name, null);
    }
}
